{*
Example for Opto_Encoder Click

    Date          : Feb 2018.
    Author        : MikroE Team

Test configuration AVR :
    
    MCU              : ATMEGA32
    Dev. Board       : EasyAVR v7 
    AVR Compiler ver : v7.0.1.0

---

Description :

The application is composed of three sections :

- System Initialization - Initializes PWM pin and INT pin as INPUT.
- Application Initialization - Initializes Driver init and opto encoder init.
- Application Task - (code snippet) - Detects the change of step and logs to usb uart number of stepped steps.
*}
program Click_Opto_Encoder_AVR;

uses Click_Opto_Encoder_types, Click_Opto_Encoder_config;

var
    newStep : int16_t; 
    oldStep : int16_t; 
    text : array[256] of char; 
    
procedure systemInit(); 
begin

    mikrobus_gpioInit(_MIKROBUS1, _MIKROBUS_INT_PIN, _GPIO_INPUT); 
    mikrobus_gpioInit(_MIKROBUS1, _MIKROBUS_PWM_PIN, _GPIO_INPUT); 
    mikrobus_logInit(_LOG_USBUART, 9600); 
    mikrobus_logWrite('--- System Inti --- ', _LOG_LINE); 
    Delay_ms(100); 

end;

procedure applicationInit(); 
begin

    optoencoder_gpioDriverInit(T_OPTOENCODER_P(@_MIKROBUS1_GPIO)); 
    optoencoder_init(); 

end;

procedure applicationTask(); 
begin

    newStep := optoencoder_getPosition(); 
    if ((oldStep <> newStep)) then 
    begin
        IntToStr(newStep, text); 
        mikrobus_logWrite(' Step: ', _LOG_TEXT); 
        mikrobus_logWrite(text, _LOG_LINE); 
        oldStep := newStep; 
    end; 

end;

begin
    oldStep := 0;

    systemInit(); 
    applicationInit(); 
    while (1) do 
    begin 
        applicationTask(); 
    end;

end.